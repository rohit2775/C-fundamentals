 
 Function is block of code performing a unit task.

Function has a name, return type and arguments.

Function is a way to achieve modularization.

Functions are Predefined and User-defined.

Predefined functions are declared in header files and defined in library files.




function declaration , definition , function call 



 1.function declaration 

Function Declaration is also known as Function prototype
Functions need to be declared before use (just like variables)
Functions can be declared locally or globally
Syntax:
ReturnType functionName(argumentList);
Function definition is a block of code


 2. function definition 
  writing a block of code with its return type and arguments is called function definition 

  these are of 4 types 
  1.takes nothing return nothilng 
  2.takes something return something
  3.take something return nothing 
  4. take nothing return something 

3. Function Call
This is when you use the function in your program.
At this point, the function executes and returns a result.


{arguments 

Formal Arguments
The variables written inside the function definition are called formal arguments.
They act like placeholders that receive values when the function is called.}



examples 


1. Takes Nothing, Returns Nothing

#include <iostream>
using namespace std;

void greet() {   // takes nothing, returns nothing
    cout << "Hello Rohit bhai! ðŸ‘‹" << endl;
}

int main() {
    greet();   // function call
    return 0;
}




2. Takes Something, Returns Something

#include <iostream>
using namespace std;

int square(int n) {   // takes something, returns something
    return n * n;
}

int main() {
    int num = 5;
    int result = square(num);   // function call
    cout << "Square of " << num << " is " << result << endl;
    return 0;
}


3. Takes Something, Returns Nothing

#include <iostream>
using namespace std;

void printSum(int a, int b) {   // takes something, returns nothing
    cout << "Sum is: " << a + b << endl;
}

int main() {
    printSum(7, 3);   // function call
    return 0;
}






4. Takes Nothing, Returns Something


#include <iostream>
using namespace std;

int getRandomNumber() {   // takes nothing, returns something
    return 42;  // just an example value
}

int main() {
    int num = getRandomNumber();   // function call
    cout << "Random number is: " << num << endl;
    return 0;
}
